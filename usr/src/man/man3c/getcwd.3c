.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 2021 OmniOS Community Edition (OmniOSce) Association.
.\"
.Dd February 27, 2021
.Dt GETCWD 3C
.Os
.Sh NAME
.Nm getcwd
.Nd get pathname of current working directory
.Sh SYNOPSIS
.In unistd.h
.Ft "char *"
.Fo getcwd
.Fa "char *buf"
.Fa "size_t size"
.Fc
.Sh DESCRIPTION
The
.Fn getcwd
function returns a pointer to a buffer containing the absolute pathname of the
current working directory.
The returned pathname contains no components that are symbolic links.
.Pp
When
.Fa buf
is not
.Dv NULL ,
the absolute pathname will be written into
.Fa buf
and
.Fa size
represents the length in bytes of
.Fa buf .
If the length of the pathname and nul terminator exceeds
.Fa size ,
nothing will be written and
.Fn getcwd
will return
.Dv NULL .
Otherwise,
.Fn getcwd
returns
.Fa buf .
.Pp
When
.Fa buf
is
.Dv NULL
then
.Fn getcwd
will allocate memory in which to store the pathname of the current working
directory.
If
.Fa size
is non-zero, then
.Fa size
bytes will be allocated.
If the length of the pathname and nul terminator exceeds
.Fa size ,
the memory will be freed and
.Fn getcwd
will return
.Dv NULL .
If
.Fa size
is zero, then
.Fn getcwd
will attempt to allocate enough space to hold the pathname.
In both cases, it is the caller's responsibility to free the returned buffer
with the
.Xr free 3C
function.
.Sh RETURN VALUES
Upon successful completion, the
.Fn getcwd
function returns a pointer to a buffer containing the pathname.
Otherwise,
.Dv NULL
is returned and
.Va errno
is set to indicate the error.
.Sh EXAMPLES
.Sy Example 1
Determine the absolute pathname of the current working directory.
.Pp
The following example returns a pointer to an array that holds the absolute
pathname of the current working directory.
The pointer is returned in the
.Va ptr
variable, which points to the
.Va buf
array where the pathname is stored.
.Bd -literal -offset Ds
#include <stdlib.h>
#include <unistd.h>
\&...
long size;
char *buf;
char *ptr;
size = pathconf(".", _PC_PATH_MAX);
if ((buf = (char *)malloc((size_t)size)) != NULL)
	ptr = getcwd(buf, (size_t)size);
\&...
.Ed
.Pp
.Sy Example 2
Print the current working directory.
.Pp
The following example prints the current working directory.
.Bd -literal -offset Ds
#include <stdio.h>
#include <unistd.h>

int
main(void)
{
	char *cwd;

	if ((cwd = getcwd(NULL, 0)) == NULL) {
		perror("pwd");
		exit(2);
	}
	(void)printf("%s\en", cwd);
	free(cwd); /* free memory allocated by getcwd() */
	return(0);
}
.Ed
.Sh ERRORS
The
.Fn getcwd
function will fail if:
.Bl -tag -width Er
.It Er EFAULT
The
.Fa buf
argument points to an invalid address.
.It Er EINVAL
The
.Fa buf
argument is not
.Dv NULL
and the
.Fa size
argument is 0.
.It Er ERANGE
The pathname
.Pq including its terminating nul character
is too long to fit into the provided
.Pq or allocated
buffer.
.It Er EACCESS
A parent directory cannot be read to get its name.
.It Er ENOMEM
Insufficient storage space is available.
.El
.Sh USAGE
Applications should exercise care when using
.Xr chdir 2
in conjunction with
.Fn getcwd .
The current working directory is global to all threads within a process.
If more than one thread calls
.Xr chdir 2
to change the working directory, a subsequent call to
.Fn getcwd
could produce unexpected results.
.Sh INTERFACE STABILITY
.Sy Committed
.Sh SEE ALSO
.Xr chdir 2 ,
.Xr free 3C ,
.Xr attributes 5 ,
.Xr standards 5
