.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T.
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 2014 Garrett D'Amore <garrett@damore.org>
.\" Copyright 2016 Joyent, Inc.
.\"
.TH CTYPE 3C "November 8, 2020"
.SH NAME
ctype, isalpha, isalnum, isascii, isblank, iscntrl, isdigit, islower,
isprint, isspace, isupper, ispunct, isgraph, isxdigit, isalpha_l,
isalnum_l, isblank_l, iscntrl_l, isdigit_l, islower_l, isprint_l,
isspace_l, isupper_l, ispunct_l, isgraph_l, isxdigit_l \- character handling
.SH SYNOPSIS
.nf
#include <ctype.h>

\fBint\fR \fBisalpha\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisalnum\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisascii\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisblank\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBiscntrl\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisdigit\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisgraph\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBislower\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisprint\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBispunct\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisspace\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisupper\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisxdigit\fR(\fBint\fR \fIc\fR);
.fi
.LP
.nf
\fBint\fR \fBisalpha_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisalnum_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisblank_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBiscntrl_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisdigit_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisgraph_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBislower_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisprint_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBispunct_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisspace_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisupper_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.LP
.nf
\fBint\fR \fBisxdigit_l\fR(\fBint\fR \fIc\fR, \fBlocale_t\fR \fIloc\fR);
.fi
.SH DESCRIPTION
These functions classify character-coded integer values. Each is a
predicate returning non-zero for true, \fB0\fR for false. The behavior
of these macros, except \fBisascii()\fR, is affected by the current
locale (see \fBsetlocale\fR(3C) and \fBuselocale\fR(3C)). To modify
the behavior, change the \fBLC_TYPE\fR category in \fBsetlocale()\fR, that is,
\fBsetlocale(\fR\fBLC_CTYPE\fR, \fInewlocale\fR). In the "C" locale,
or in a locale where character type information is not defined,
characters are classified according to the rules of the \fBUS-ASCII\fR
7-bit coded character set.
.LP
The functions \fBisalnum_l()\fR, \fBisalpha_l()\fR, \fBisblank_l()\fR,
\fBiscntrl_l\fR, \fBisdigit_l()\fR, \fBisgraph_l()\fR,
\fBislower_l()\fR, \fBisprint_l()\fR, \fBispunct_l()\fR,
\fBisspace_l()\fR, \fBisupper_l()\fR, and \fBisxdigit_l()\fR all behave
identically to their counterparts without the '\fB_l\fR' prefix, except
that instead of acting on the current locale, they perform the test on
the locale specified in the argument \fIloc\fR.
.LP
The \fBisascii()\fR macro is defined on all integer values. The rest are
defined only where the argument is an \fBint\fR, the value of which is
representable as an \fBunsigned char\fR, or \fBEOF\fR, which is defined by the
<\fBstdio.h\fR> header and represents end-of-file.
.sp
.ne 2
.na
\fB\fBisalpha()\fR\fR
.ad
.RS 13n
Tests for any character for which \fBisupper()\fR or \fBislower()\fR is true,
or any character that is one of the current locale-defined set of characters
for which none of \fBiscntrl()\fR, \fBisdigit()\fR, \fBispunct()\fR, or
\fBisspace()\fR is true. In "C" locale, \fBisalpha()\fR returns true only for
the characters for which \fBisupper()\fR or \fBislower()\fR is true.
.RE

.sp
.ne 2
.na
\fB\fBisalnum()\fR\fR
.ad
.RS 13n
Tests for any character for which \fBisalpha()\fR or \fBisdigit()\fR is true
(letter or digit).
.RE

.sp
.ne 2
.na
\fB\fBisascii()\fR\fR
.ad
.RS 13n
Tests for any ASCII character, code between \fB0\fR and \fB0177\fR inclusive.
.RE

.sp
.ne 2
.na
\fB\fBisblank()\fR\fR
.ad
.RS 13n
Tests whether \fIc\fR is a character of class blank in the current locale. This
macro/function is not available to applications conforming to standards prior
to SUSv3. See \fBstandards\fR(5)
.RE

.sp
.ne 2
.na
\fB\fBiscntrl()\fR\fR
.ad
.RS 13n
Tests for any ``control character'' as defined by the character set.
.RE

.sp
.ne 2
.na
\fB\fBisdigit()\fR\fR
.ad
.RS 13n
Tests for any decimal-digit character.
.RE

.sp
.ne 2
.na
\fB\fBisgraph()\fR\fR
.ad
.RS 13n
Tests for any character for which \fBisalnum()\fR and \fBispunct()\fR are true,
or any character in the current locale-defined "graph" class which is neither a
space ("\|") nor a character for which \fBiscntrl()\fR is true.
.RE

.sp
.ne 2
.na
\fB\fBislower()\fR\fR
.ad
.RS 13n
Tests for any character that is a lower-case letter or is one of the current
locale-defined set of characters for which none of \fBiscntrl()\fR,
\fBisdigit()\fR, \fBispunct()\fR, \fBisspace()\fR, or \fBisupper()\fR is true.
In the "C" locale, \fBislower()\fR returns true only for the characters defined
as lower-case \fBASCII\fR characters.
.RE

.sp
.ne 2
.na
\fB\fBisprint()\fR\fR
.ad
.RS 13n
Tests for any character for which \fBiscntrl()\fR is false, and
\fBisalnum()\fR, \fBisgraph()\fR, \fBispunct()\fR, the space character ("\|"),
and the characters in the current locale-defined "print" class are true.
.RE

.sp
.ne 2
.na
\fB\fBispunct()\fR\fR
.ad
.RS 13n
Tests for any printing character which is neither a space ("\|") nor a
character for which \fBisalnum()\fR or \fBiscntrl()\fR is true.
.RE

.sp
.ne 2
.na
\fB\fBisspace()\fR\fR
.ad
.RS 13n
Tests for any space, tab, carriage-return, newline, vertical-tab or form-feed
(standard white-space characters) or for one of the current locale-defined set
of characters for which \fBisalnum()\fR is false.  In the "C" locale,
\fBisspace()\fR returns true only for the standard white-space characters.
.RE

.sp
.ne 2
.na
\fB\fBisupper()\fR\fR
.ad
.RS 13n
Tests for any character that is an upper-case letter or is one of the current
locale-defined set of characters for which none of \fBiscntrl()\fR,
\fBisdigit()\fR, \fBispunct()\fR, \fBisspace()\fR, or \fBislower()\fR is true.
In the "C" locale, \fBisupper()\fR returns true only for the characters defined
as upper-case \fBASCII\fR characters.
.RE

.sp
.ne 2
.na
\fB\fBisxdigit()\fR\fR
.ad
.RS 14n
Tests for any hexadecimal-digit character (\fB[0\(mi9]\fR, \fB[A\(miF]\fR, or
\fB[a\(mif]\fR or the current locale-defined sets of characters representing
the hexadecimal digits \fB10\fR to \fB15\fR inclusive). In the "C" locale, only
.sp
.in +2
.nf
0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f
.fi
.in -2

are included.
.RE

.SH RETURN VALUES
If the argument to any of the character handling macros is not in the domain of
the function, the result is undefined. Otherwise, the macro or function returns
non-zero if the classification is \fBTRUE\fR and \fB0\fR if the classification
is \fBFALSE\fR.
.SH ATTRIBUTES
See \fBattributes\fR(5) for descriptions of the following attributes:
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
CSI	Enabled
_
Interface Stability	Standard
_
MT-Level	MT-Safe
.TE

.SH SEE ALSO
\fBnewlocale\fR(3C), \fBsetlocale\fR(3C), \fBuselocale\fR(3C),
\fBstdio\fR(3C), \fBascii\fR(5), \fBenviron\fR(5),
\fBstandards\fR(5)
